plugins {
	id 'org.springframework.boot' version '2.4.10'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.tradingbot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.4")
	mapstructVersion = '1.4.2.Final'
	lombokVersion = "1.18.20"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    implementation "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.integration:spring-integration-kafka:5.5.3'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.json:json:20190722'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	implementation 'com.auth0:java-jwt:3.18.1'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'commons-codec:commons-codec'
	implementation group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.5.0'
	implementation group: 'xerces', name: 'xercesImpl', version: '2.6.2-jaxb-1.0.6'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
